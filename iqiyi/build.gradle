apply plugin: 'com.android.application'
apply plugin: 'com.oushang.plugin.BuildVersionName'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        applicationId "com.oushang.iqiyi"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 100087
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi-v7a'
        }


        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file(".\\iqiyi_keystore_release.jks")
            keyAlias "iqiyikey"
            keyPassword "iqiyikey"
            storePassword "iqiyikey"
            v2SigningEnabled false
        }

        release {
            storeFile file(".\\iqiyi_keystore_release.jks")
            keyAlias "iqiyikey"
            keyPassword "iqiyikey"
            storePassword "iqiyikey"
            v2SigningEnabled false
        }

    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            testCoverageEnabled false
        }
        release {
            minifyEnabled false //是否代码加密, 混淆代码
            shrinkResources false //压缩资源，删除无效的Resource
            zipAlignEnabled true //是否开启zip压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' //代码加密原则
            signingConfig signingConfigs.release //签名配置的引用
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Iqiyi_V${defaultConfig.versionName}_${buildTime()}.apk"
        }
    }

    // Butterknife requires Java 8.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

def buildTime() {
    return new Date().format("MMddHH", TimeZone.getTimeZone("GMT+08:00"))
}

buildVersionName {
    canGenerateVersionNameType = ["debug", "release"]
    softwareStatus = "B"
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation files('libs\\UserManager-1.3.7.jar')
    implementation files('libs\\car-libs.jar')
    implementation files('libs/datastatadapter.jar')
    implementation(name:'TSMiddleService-release', ext:'aar') //引入第三屏接口

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    /**
     * lib_base
     */
    implementation project(path: ':lib_base')

    /**
     * lib_service
     */
    implementation project(path: ':lib_service')

    /**
     * butterknife注解处理
     */
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    /**
     * androidx material
     */
    implementation "com.google.android.material:material:1.3.0"

    /**
     * 骨架屏
     */
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'

    /***
     * event bus
     */
    implementation 'org.greenrobot:eventbus:3.2.0'

    /**
     * AVLoadingIndicatorView
     */
    implementation 'com.wang.avi:library:2.1.3'

    /**
     * ARouter 注解处理器
     */
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'

    /**
     * 公共组件
     */
    implementation project(path: ':lib_common_component')

    /**
     * rxlifecycle
     */
    implementation 'com.trello.rxlifecycle4:rxlifecycle-android:4.0.2'
    implementation 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.2'

    /**
     * 性能优秀的快速背景模糊库
     */
    implementation 'io.alterac.blurkit:blurkit:1.1.0'

    /**
     * room 注解处理器
     */
//    annotationProcessor "androidx.room:room-compiler:2.2.2"

    /**
     * rxbinding
     */
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    /**
     * leakcanary
     */
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    /**
     * blockcanary
     */
//    implementation 'com.github.markzhai:blockcanary-android:1.5.0'
//    // 仅在debug包启用BlockCanary进行卡顿监控和提示的话，可以这么用
//    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
//    releaseImplementation 'com.github.markzhai:blockcanary-no-op:1.5.0'

    /**
     * voicebridge
     */
    implementation ('com.oushang:voicebridge:1.0.25-SNAPSHOT')

}
